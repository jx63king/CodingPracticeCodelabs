Your mission: Write a simple interpreter in Java that understands the "+", "-", and "*" operations, then apply them. This is an exacting, Google-created exercise, so take your time.


Write a simple interpreter which understands "+", "-", and "*" operations. Apply the operations in order using command/arg pairs starting with the initial value of `value`. If you encounter an unknown command, return -1.


interpret(1, ["+"], [1]) → 2
interpret(4, ["-"], [2]) → 2
interpret(1, ["+", "*"], [1, 3]) → 6






public int interpret(int value, String[] commands, int[] args) {
    int result=value; 
    
    for(int i=0; i<commands.length; i++) {
        if(commands[i]==String.valueOf("-") ) {
            result = result - args[i]; 
        }
        else if(commands[i]==String.valueOf("+")) {
            result = result + args[i]; 
        }
        else if(commands[i]==String.valueOf("*")) {
            result = result * args[i]; 
        }
        else result = -1; 
    }

    return result; 
}

correct for more than half of the tests, I could think of one of the cases that's possible, however, cases like this would need the person who is giving this problem's verification. (Requirements not clear) 

cases like interpret(1, ["+", "?"], [1, 3]) --> should this return -1? 

interpret(1, ["+", "-"], [1, 3, 4])

What other cases could there be? 
(Will be updating this later if I thought of anything )






https://codingbat.com/prob/p121193

Given a string, return the sum of the numbers appearing in the string, ignoring all other characters. A number is a series of 1 or more digit chars in a row. (Note: Character.isDigit(char) tests if a char is one of the chars '0', '1', .. '9'. Integer.parseInt(string) converts a string to an int.)

sumNumbers("abc123xyz") → 123
sumNumbers("aa11b33") → 44
sumNumbers("7 11") → 18

1) loop through the string
2) check if the char is a character or not 
3) if it is not, then add it to int sum 




public int sumNumbers(String str) {
    Integer sum = 0;
    String nums[]; 
    StringBuilder str_num = new StringBuilder(); 
    int len = str.length(); 
    String tmp = ""; 

    for(int i =0; i<len; i++) {
        if(Character.isDigit(str.charAt(i))) {
            // always check the next char so that we can know where to stop 
            // 
            if(i<len-1 && Character.isDigit(str.charAt(i+1))) {
                tmp = tmp + str.charAt(i); 
            }
            else {
            tmp = tmp + str.charAt(i); 
            sum = sum + Integer.parseInt(tmp); 
            tmp = ""; 
            }
        }
    }

    return sum; 
}


// create a StringBuilder object 
// using StringBuilder() constructor 
StringBuilder str = new StringBuilder(); 

str.append("GFG"); 
// print string 
System.out.println("String = " + str.toString()); 


solution: 
public int sumNumbers(String str) {
    int len = str.length(); 
    int sum = 0; 
    String tmp = ""; 

    for(int i=0; i<len; i++) {
        if(Character.isDigit(str.charAt(i))) {
            if(i<len-1 && Character.isDigit(str.charAt(i+1))) {
                tmp += str.charAt(i); 
            }
            else {
                tmp += str.charAt(i); 
                sum += Integer.parseInt(tmp); 
                tmp = ""; 
            }
        }
    }
    return sum; 
}
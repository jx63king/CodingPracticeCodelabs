https://codingbat.com/prob/p183562


See if you have enough bricks to reach a certain length in this Java-based logic problem. Warning: this is a tough one.



We want to make a row of bricks that is goal inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Return true if it is possible to make the goal by choosing from the given bricks. This is a little harder than it looks and can be done without any loops. See also: Introduction to MakeBricks (https://codingbat.com/doc/practice/makebricks-introduction.html)


makeBricks(3, 1, 8) → true
makeBricks(3, 1, 9) → false
makeBricks(3, 2, 10) → true


public boolean makeBricks(int small, int big, int goal) {
    int remain =0; 
    
    if(big == 0) {
      remain = goal; 
      if(remain<=small) return true; 
      else return false; 
    }
    
    if(big > 1) {
      remain = goal % (big*5); 
    }
    else if(big == 1) {
      remain = goal - big*5; 
    }

    if(small >= remain ) return true; 
    else return false; 
}

// My solution only covered most of the cases



Solution from https://github.com/VictorMOchoa/CodingBat-Java/blob/master/Logic-2/makeBricks.java

	/*
    We want to make a row of bricks that is goal inches long. We have a number of small bricks (1 inch each) and big 
	 * bricks (5 inches each). Return true if it is possible to make the goal by choosing from the given bricks. This is 
	 * a little harder than it looks and can be done without any loops. See also: Introduction to MakeBricks
    */

	public boolean makeBricks(int small, int big, int goal) {
		if(goal > (big*5 + small) ) { //Not enough total
			return false;
		} else {
			return goal % 5 <= small; //Check if there are enough small bricks
		}
	}


